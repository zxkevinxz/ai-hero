diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/answer-question.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/answer-question.ts
index 99de387..91fe4c8 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/answer-question.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/answer-question.ts
@@ -7,10 +7,9 @@ export function answerQuestion(
   opts: {
     isFinal?: boolean;
     langfuseTraceId?: string;
-    onFinish: Parameters<typeof streamText>[0]["onFinish"];
   },
 ): StreamTextResult<{}, string> {
-  const { isFinal = false, langfuseTraceId, onFinish } = opts;
+  const { isFinal = false, langfuseTraceId } = opts;
 
   return streamText({
     model,
@@ -41,6 +40,5 @@ ${ctx.getScrapeHistory()}`,
           },
         }
       : undefined,
-    onFinish,
   });
 }
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
index 868dcfb..c3ded63 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
@@ -81,29 +81,6 @@ export async function POST(request: Request) {
 
       const result = await streamFromDeepSearch({
         messages,
-        onFinish: async ({ response }) => {
-          // Merge the existing messages with the response messages
-          // TODO: fix this type error
-          const updatedMessages = appendResponseMessages({
-            messages,
-            responseMessages: response.messages,
-          });
-
-          const lastMessage = updatedMessages[updatedMessages.length - 1];
-          if (!lastMessage) {
-            return;
-          }
-
-          // Save the complete chat history
-          await upsertChat({
-            userId: session.user.id,
-            chatId: currentChatId,
-            title: lastMessage.content.slice(0, 50) + "...",
-            messages: updatedMessages,
-          });
-
-          await langfuse.flushAsync();
-        },
         langfuseTraceId: trace.id,
         writeMessagePart: (part) => {
           dataStream.writer.write(part);
@@ -116,6 +93,22 @@ export async function POST(request: Request) {
       console.error(e);
       return "Oops, an error occurred!";
     },
+    onFinish: async (response) => {
+      const updatedMessages = [...messages, ...response.messages];
+
+      const lastMessage = updatedMessages[updatedMessages.length - 1];
+      if (!lastMessage) {
+        return;
+      }
+      // Save the complete chat history
+      await upsertChat({
+        userId: session.user.id,
+        chatId: currentChatId,
+        title: textPartsToContent(lastMessage.parts).slice(0, 50) + "...",
+        messages: updatedMessages,
+      });
+      await langfuse.flushAsync();
+    },
   });
 
   return createUIMessageStreamResponse({ stream });
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/deep-search.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/deep-search.ts
index 99c9e68..4ef3041 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/deep-search.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/deep-search.ts
@@ -8,21 +8,18 @@ import { runAgentLoop } from "./run-agent-loop";
 
 export const streamFromDeepSearch = async (opts: {
   messages: UIMessage[];
-  onFinish: Parameters<typeof streamText>[0]["onFinish"];
   langfuseTraceId?: string;
   writeMessagePart?: UIMessageStreamWriter["write"];
 }): Promise<StreamTextResult<{}, string>> => {
   return runAgentLoop(opts.messages, {
     langfuseTraceId: opts.langfuseTraceId,
     writeMessagePart: opts.writeMessagePart,
-    onFinish: opts.onFinish,
   });
 };
 
 export async function askDeepSearch(messages: UIMessage[]) {
   const result = await streamFromDeepSearch({
     messages,
-    onFinish: () => {}, // just a stub
     langfuseTraceId: undefined,
   });
 
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/run-agent-loop.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/run-agent-loop.ts
index 5867f37..096b90a 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/run-agent-loop.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/run-agent-loop.ts
@@ -1,23 +1,19 @@
-import { SystemContext } from "./system-context";
-import { getNextAction } from "./get-next-action";
-import { searchSerper } from "./serper";
-import { bulkCrawlWebsites } from "./server/scraper";
 import {
-  streamText,
   type StreamTextResult,
   type UIMessage,
   type UIMessageStreamWriter,
 } from "ai";
-import { model } from "~/model";
 import { answerQuestion } from "./answer-question";
-import type { OurMessage } from "./types";
+import { getNextAction } from "./get-next-action";
+import { searchSerper } from "./serper";
+import { bulkCrawlWebsites } from "./server/scraper";
+import { SystemContext } from "./system-context";
 
 export async function runAgentLoop(
   messages: UIMessage[],
   opts: {
     langfuseTraceId?: string;
     writeMessagePart?: UIMessageStreamWriter["write"];
-    onFinish: Parameters<typeof streamText>[0]["onFinish"];
   },
 ): Promise<StreamTextResult<{}, string>> {
   // A persistent container for the state of our system
