diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/chat.tsx b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/chat.tsx
index 0f843bd..3ad14f5 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/chat.tsx
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/chat.tsx
@@ -1,12 +1,13 @@
 "use client";
 
-import { useChat } from "@ai-sdk/react";
+import { Chat, useChat } from "@ai-sdk/react";
 import { Loader2 } from "lucide-react";
-import { useState, useEffect } from "react";
+import { useState, useEffect, useMemo } from "react";
 import { useRouter } from "next/navigation";
 import { ChatMessage } from "~/components/chat-message";
 import { SignInModal } from "~/components/sign-in-modal";
 import type { OurMessage } from "~/types";
+import { DefaultChatTransport } from "ai";
 
 interface ChatProps {
   userName: string;
@@ -23,12 +24,21 @@ export const ChatPage = ({
 }: ChatProps) => {
   const [showSignInModal, setShowSignInModal] = useState(false);
   const router = useRouter();
+
+  const chat = useMemo(() => {
+    return new Chat({
+      messages: initialMessages,
+      id: chatId,
+      transport: new DefaultChatTransport({
+        body: {
+          chatId,
+        },
+      }),
+    });
+  }, [initialMessages, chatId]);
+
   const { messages, sendMessage, status } = useChat<OurMessage>({
-    // TODO: fix body property
-    body: {
-      chatId,
-    },
-    initialMessages,
+    chat,
   });
 
   const isLoading = status === "streaming";
@@ -37,6 +47,8 @@ export const ChatPage = ({
     const lastMessage = messages[messages.length - 1];
     const mostRecentPartOfMessage =
       lastMessage?.parts?.[lastMessage.parts.length - 1];
+
+    console.log(mostRecentPartOfMessage);
     if (
       mostRecentPartOfMessage &&
       mostRecentPartOfMessage.type === "data-new-chat-created"
@@ -58,6 +70,7 @@ export const ChatPage = ({
     sendMessage({
       text: input,
     });
+    setInput("");
   };
 
   return (
